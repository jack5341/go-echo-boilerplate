name: CI/CD

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:

permissions:
  contents: read
  pull-requests: read

env:
  DOCKER_IMAGE_TAG: ${{ github.sha }}

jobs:
  linting:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20.2"
          cache: false

      - uses: actions/checkout@v3

      - name: Get dependencies
        run: |
          go mod tidy
      - name: Build Project
        run: go build -v ./

      - name: Run Tests
        run: go test -v ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52

  testing:
    name: Test
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go mod tidy

      - name: Run Tests
        run: go test -v ./...

  deploying:
    name: Deploy
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          buildkitd-flags: --debug
          tags: 0.dkr.ecr.eu-central-1.amazonaws.com/pikachu/go-boilerplate:${{ env.DOCKER_IMAGE_TAG }}

      - name: SSH into virtual machine
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 0.dkr.ecr.eu-central-1.amazonaws.com/pikachu/go-boilerplate
            docker pull 0.dkr.ecr.eu-central-1.amazonaws.com/pikachu/go-boilerplate:${{ env.DOCKER_IMAGE_TAG }}
            docker tag 0.dkr.ecr.eu-central-1.amazonaws.com/pikachu/go-boilerplate:${{ env.DOCKER_IMAGE_TAG }} 0.dkr.ecr.eu-central-1.amazonaws.com/pikachu/go-boilerplate:latest
            cd /root/go-boilerplate
            docker compose up -d
