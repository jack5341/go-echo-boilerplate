basePath: /
definitions:
  auth.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  auth.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  company.CompanyInformation:
    type: object
  document.DocumentInformation:
    type: object
host: invoiceprinter.nedim-akar.cloud
info:
  contact: {}
  description: This is Invoice Printer Backend Api Documentation
  title: Invoice Printer
  version: "1.0"
paths:
  /company:
    get:
      description: Get the user Company
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Get Company
      tags:
      - Company
    patch:
      consumes:
      - multipart/form-data
      description: Update the user Company
      parameters:
      - description: Company data
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/company.CompanyInformation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Update Company
      tags:
      - Company
    post:
      consumes:
      - multipart/form-data
      description: Get the user Company
      parameters:
      - description: Company data
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/company.CompanyInformation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "409":
          description: Conflict
      security:
      - ApiKeyAuth: []
      summary: Get Company
      tags:
      - Company
  /documents:
    post:
      consumes:
      - multipart/form-data
      description: Create a document for a company
      parameters:
      - description: DocumentInformation data
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/document.DocumentInformation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create Document
      tags:
      - Document
  /documents/:id:
    delete:
      description: Delete document for a company
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete Document
      tags:
      - Document
    get:
      description: Get document for a company
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Document
      tags:
      - Document
  /forgot-password:
    post:
      consumes:
      - multipart/form-data
      description: Endpoint for initiating the forgot password process
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
      summary: Forgot Password
      tags:
      - Auth
  /refresh-token:
    post:
      consumes:
      - multipart/form-data
      description: Endpoint for refreshing user token
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: accessToken
        in: formData
        name: accessToken
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
      summary: Refresh Token
      tags:
      - Auth
  /reset-password:
    post:
      consumes:
      - multipart/form-data
      description: Endpoint for resetting the password after initiating forgot password
        process
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Verification Code
        in: formData
        name: code
        required: true
        type: string
      - description: New Password
        in: formData
        name: newPassword
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
      summary: Reset Password
      tags:
      - Auth
  /schedule:
    post:
      description: Create Schedule for a company
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create Schedule
      tags:
      - Schedule
  /schedule/:id:
    get:
      description: Get Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Schedule
      tags:
      - Schedule
  /signin:
    post:
      consumes:
      - multipart/form-data
      description: Endpoint for signing in a user
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
      summary: Sign In
      tags:
      - Auth
  /signup:
    post:
      consumes:
      - multipart/form-data
      description: Endpoint for signing up a user
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Nickname
        in: formData
        name: nickname
        required: true
        type: string
      - description: Full Name
        in: formData
        name: fullName
        required: true
        type: string
      - description: Phone Number
        in: formData
        name: phoneNumber
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Profile Photo
        in: formData
        name: photo
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
      summary: Sign Up
      tags:
      - Auth
  /verify:
    post:
      consumes:
      - multipart/form-data
      description: Endpoint for verifying a user's email
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Verification Code
        in: formData
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
      summary: Verify Email
      tags:
      - Auth
swagger: "2.0"
